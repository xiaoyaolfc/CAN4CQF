[General]
network = can4cqf.simulations.large_network.Large_network
result-dir = results
sim-time-limit = 4s
**.bin-recording = true
#**.scalar-recording = true
#**.statistic-recording = true
**.vector-recording = true
record-eventlog = false
**.rxgate.controlList.vector-recording = false
**.rxgate.controlList.scalar-recording = false
**.rxgate.controlList.record = none

**.gateControlList.controlList.vector-recording = false
**.gateControlList.controlList.scalar-recording = false
**.gateControlList.controlList.record = none


# 不记录
**.rxgate.controlList.record = false
**.gateControlList.controlList.record = false


# 定义网关处理时延，不能设置太大，会影响T_CQF内到达CAN报文的数量
**.gateway.bufferingDelay = 10us
**.gateway.transformDelay = 10us
# 定义CAN网络速度
**.canBus1.bandwidth = 8Mbps
**.canBus2.bandwidth = 8Mbps
**.addressTableFile = "addressTable.txt"
**.scheduler.tick = 100ns

**.scheduler.numPeriods = 1

**.scheduler.period[0].cycle_ticks = sec_to_tick(4s)
**.scheduler.period[0].offset_ticks = sec_to_tick(0ms)

# Maximum clock drift of 20ppm
**.scheduler.oscillator.max_drift = 200ppm
# Maximum clock drift change of 0.1ps per cycle
**.scheduler.oscillator.drift_change =  uniform(-50ppm,50ppm)
# precission of synchronisation
**.precission = 500ns

# 引入预先定义的包
include gateway1.ini
include gateway2.ini
include switch1.ini
include switch2.ini
include switch3.ini
#include canNodeSend.ini
#include canNodeReceive.ini
#include canNodeSend_same_initialDataFrameOffset.ini
#include canNodeSend_same_period.ini
#include canNodeReceive_same_period.ini

# 仿真实现不同周期、相同发送时刻的配置文件->实验1
#include canNodeSend_diff_period_0offset_80flow.ini
#include canNodeReceive_diff_period_0offset_80flow.ini
#include canNodeSend_diff_period_0offset_120flow.ini
#include canNodeReceive_diff_period_120flow.ini
#include canNodeSend_diff_period_0offset_160flow.ini
#include canNodeReceive_diff_period_160flow.ini
#include canNodeSend_same_period_160flow.ini
#include canNodeReceive_same_period_160flow.ini

# 仿真实现相同周期、相同发送时刻的配置文件->实验2
include canNodeSendAndReceive_10_80flow.ini
#include canNodeSendAndReceive_10_120flow.ini
#include canNodeSendAndReceive_10_160flow.ini


include gateway_control_list.ini
#include gateway_control_list_50us.ini
#include gateway_control_list_100us.ini

# 当使用双端发送时，配置xml文件
**.configXML = xmldoc("GatewayConfig.xml")
#**.configXML = xmldoc("GatewayConfig_Bilateral.xml")
#**.configXML = xmldoc("GatewayConfig_Right2left.xml")
#**.configXML = xmldoc("GatewayConfig_160flow.xml")

[Config RAE]
# 添加gateway处理模块
**.gateway.buffering[*].typename = "ResortAggregationGatewayBuffering"
**.gateway.transform[*].typename = "RAEGatewayTransformation"
**.gateway.buffering[*].timeout = 0.2ms
**.maxNuminCQF = 40
**.Deterministic_flow = "5,6,7,8,9,10"
[Config one-to-one]
# 修改gateway相关模块
**.gateway.buffering[*].typename = "AggregationGatewayBuffering"
**.gateway.transform[*].typename = "GatewayTransformation"
#**.MaxHRTFID = 160
**.MaxHRTFID = 80
**.alpha = 1 
**.Tmax = 10s
**.sigma = 2

[Config EDF]
**.gateway.buffering[*].typename = "ResortAggregationGatewayBuffering"
**.gateway.transform[*].typename = "EDFGatewayTransformation"
**.gateway.buffering[*].timeout = 100us

[Config timeout]
**.gateway.buffering[*].typename = "ResortAggregationGatewayBuffering"
**.gateway.transform[*].typename = "TimeoutGatewayTransformation"
**.gateway.buffering[*].timeout = 200us

[Config CrclRt]
**.gateway.buffering[*].typename = "CircularRotationBuffer"
**.gateway.transform[*].typename = "VarGatewayTransformation"
**.gateway.buffering[*].timeout = 100us
**.gateway.buffering[*].lamda = 0.8
